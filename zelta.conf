# Zelta Sample Backup Policy Configuration
#
# When "zelta" is called with with no options, a backup batch job is called using this configuration
# file, which contains behavior options, backup sources and targets, and other miscellaneous options.
#
# See below for examples and details about each option. For more information, see the README.md
# and wiki here: https://github.com/bellhyve/zelta


### Global Options

# # Set a default backup target for source volumes with no specified target. For example,
# # a source defined as "  - source/vol" will be replicated to "BACKUP_ROOT/vol".
# # Default Value: None (target definitions are required below)
# BACKUP_ROOT: tank/Backups

# # If set to 1 or more, attempt to retry failed replications. We most commonly use a value of
# # "RETRY: 2" to recover from everyday network interruptions.
# # Default Value: 0 (no retry on detected errors)
# RETRY: 1

# # If set to 1, replicate intermediate snapshots with "zfs send -I". The default is to use 
# # "zfs send -i"  to skip the replication of intermediate snapshots, but we recommend enabling this.
# # Default Value: 0 (no intermediate snapshots will be replicated)
# INTERMEDIATE: 1

# # If on, pass the "zfs send -R" flag which downloads past snapshots recursively up to the latest
# # match. If snapshots are always made with "zfs snapshot -r", "REPLICATE: 1" in conjunction with
# # "DEPTH: 1" will be more efficient by skipping recursive listings.
# # Default Value: 0 (do not pass "zfs send -R")
# REPLICATE: 1

# # Restrict the "zfs list" depth to this many levels. If used without REPLICATE, Zelta will produce more
# # shallow replications, e.g., if given "DEPTH: 2" and the target has the children "one/two/three", only
# # "one/two" will be replicated.
# # Default Value: None (replicate all child volumes)
# DEPTH: 3

# # Add this many elements up to the pool name underneath BACKUP_ROOT. For example, if given
# # "PREFIX: 99" and source volume "one/two/three", the target will be: BACKUP_ROOT/one/two/three
# # Default Value: None (no prefix elements will be added to target names)
# PREFIX: 99

# # Add the hostname as an element after BACKUP_ROOT, e.g., "BACKUP_ROOT/myhost/zroot". This setting
# # is recommended for configurations without unique volume names.
# # Default Value: 0 (don't add a hostname prefix to target volume names)
# HOST_PREFIX: 1

# # Replicate sources to the following host via SSH rather than a local pool.
# # Default Value: None (default backup targets are local)
# PUSH_TO: backup.host

# # By default, or if only one Site has been defined, Zelta runs one replication job at a time. If
# # THREADS is set to 2 or more and multiple Sites are defined, Zelta will replicate from that many
# # Sites at a time. In the example below with "THREADS: 2", the hosts on DEFAULT_SITE and SITE_TWO
# # will replicate simultaneously. 
# # Default Value: 0 (no Site multi-threading)
# THREADS: 2

# # Rather than providing a simple output log, print more detailed JSON output. This is useful for
# # graphing backup history.
# # Default Value: 0 (simple human-readable log)
# JSON: 1


### SITE, HOST, AND VOLUME DEFINITIONS

# # Sites are top-level elements used for multi-threading replication jobs or for organizing this 
# # file. Consider creating a Site for each physical location
#
# DEFAULT_SITE:

# # # A hostname (or IP) containing source volumes must be indended two spaces. Hosts are connected
# # # to via SSH.
#
#   host1.mynet:

# # # For each host, one or more backup source volumes must be listed. By default, the volume will
# # # be replicated to BACKUP_ROOT as described above. The volume must be indented with in YAML style
# # # with two spaces, a dash, and a space:  - source/vol/name
#
#   - pool/vm/netbsd


# # # A target can be specified for a source dataset with a colon. This overrides any element-related
# # # options above.
#
#   - pool2/jail/linux: tank/jail/linux

# # # Use a hostname of "localhost" to replicate from a local source volume.
#
#   localhost:

# # # You can also define a remote target with a [user@]host: prefix. The following could be used
# # # to send a local VM to a warm failover host:
#
#   - tank/vm/alpine: kvm@remote.host:pool/vm/alpine


# # Here's another example site definition with multiple hosts, source volumes, and targets.
#
# SITE_TWO:
#   host3.othernet:
#   - zroot: tank/Backups/host3
#   host4.othernet:
#   - pool/jail/inst1
#   - pool/jail/inst2
#   - pool/jail/inst3
#   host5.othernet:
#   - pool/vm/proxy: failover.box:tank/vm/proxy
