#!/bin/sh
: ${ZELTA_ETC:="/usr/local/etc/zelta"}
: ${ZELTA_ENV:="$ZELTA_ETC/zelta.env"}
: ${ZELTA_SNAP_NAME:="date +%Y-%m-%d_%H.%M.%S"}

if [ -r $ZELTA_ENV ]; then
       . $ZELTA_ENV
fi

: ${ZELTA_CONFIG:="$ZELTA_ETC/zelta.conf"}
: ${ZELTA_SHARE:="/usr/local/share/zelta"}
: ${AWK:="`which awk`"}

export ZELTA_ETC ZELTA_SHARE ZELTA_ENV ZELTA_CONFIG AWK
export ZELTA_SEND_FLAGS ZELTA_RECEIVE_FLAGS ZELTA_INTR_FLAGS ZELTA_DEPTH
export TIME_COMMAND ZELTA_SNAP_NAME ZELTA_RECEIVE_PREFIX 

AWKPRE="$AWK -f $ZELTA_SHARE"

# Run script directly if called with that name
zelta_command=`echo $0 | sed 's-.*/--'`
case $1 in
	backup) shift; zelta_command=backup ;;
	policy) shift; zelta_command=policy ;;
	match) shift; zelta_command=match ;;
	zmatch) shift; zelta_command=match ;;
	sync) shift; zelta_command=sync ;;
	replicate) shift; zelta_command=replicate ;;
	clone) shift; zelta_command=clone ;;
	reconcile) shift; zelta_command=reconcile ;;
	report) shift; zelta_command=zeport ;;
	snapshot) shift; zelta_command=snapshot ;;
	endpoint) shift; zelta_command=endpoint ;;
	time) shift; zelta_command=time ;;
	usage) shift; zelta_command=usage ;;
	version) echo zelta-pre-release; exit ;;
esac

case $zelta_command in
	match) $AWKPRE/zelta-match.awk -- "$@" ;;
	reconcile) $AWKPRE/zelta-reconcile.awk -- "$@" ;;
	replicate) $AWKPRE/zelta-replicate.awk -- "$@" ;;
	zpull) $AWKPRE/zelta-replicate.awk -- "$@" ;;
	zpush) $AWKPRE/zelta-replicate.awk -- "$@" ;;
	backup) $AWKPRE/zelta-replicate.awk -- -sI "$@" ;;
	clone) $AWKPRE/zelta-replicate.awk -- -c "$@" ;;
	sync) $AWKPRE/zelta-replicate.awk -- -i "$@" ;;
	policy) $AWKPRE/zelta-policy.awk -- "$@" ;;
	zeport) $AWKPRE/zelta-report.awk -- "$@" ;;
	snapshot) echo "$@" | $AWKPRE/zelta-snapshot.awk ;;
	endpoint) echo "$@" | $AWKPRE/zelta-endpoint.awk ;;
	time) "$@" | bash -c "time -p cat" ;;
	usage) . $ZELTA_SHARE/zelta-usage.sh "$@" ;;
	*) . $ZELTA_SHARE/zelta-usage.sh "$@" ;;
esac
